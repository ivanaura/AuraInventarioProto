@model IEnumerable<AuraInventarioProto.Models.INV_PC>

@{
    ViewBag.Title = "Inventario de Pc";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Inventario de Pc</h2>

<p>
    @if (Session["UserRole"].ToString() != "ReadOnly") {
        @Html.ActionLink("Crear Nuevo", "Create")
    }
    
</p>
<hr />
@if (!Model.Any()) {
    <text>No hay Inventario.</text>
} else {
    <table class="table table-striped table-bordered table-hover table-responsive display compact" id="Inventario_PC">
        <thead>
            <tr>
                <th>
                    Serial
                </th>
                <th>
                    Modelo
                </th>
                <th>
                    Marca
                </th>
                <th>
                    Tipo
                </th>
                <th>
                    Estado
                </th>
                <th>
                    Fecha ADQ
                </th>
                <th>
                    SGI Sw
                </th>
                <th>
                    SGI Res
                </th>
                <th>
                    Ultima mant.
                </th>
                <th>
                    Devuelto a TI
                </th>
                <th>
                    Asignado
                </th>
                <th>
                    Obra
                </th>
                <th class="not-export-col" >Opciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model) {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.SERIAL)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.MODELO)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.MARCA)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TIPO)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ESTADO)
                    </td>
                    <td>
                        @Html.ValueFor(modelItem => item.FECHA_ADQ, "{0:dd-MM-yyyy}")
                    </td>
                    <td style="text-align:center">
                        @Html.DisplayFor(modelItem => item.SGI_SW)
                    </td>
                    <td style="text-align:center">
                        @Html.DisplayFor(modelItem => item.SGI_RES)
                    </td>
                    <td>
                        @Html.ValueFor(modelItem => item.F_UL_MAN, "{0:dd-MM-yyyy}")
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DEVU)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ASIGN)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.OBRA)
                    </td>
                    <td style="text-align:center">
                        @{
                            if (Session["UserRole"].ToString() != "ReadOnly") {
                                @Html.ActionLink(" ", "Create", "DETMAN", new { id = item.ID, serial = item.SERIAL }, new { @class = "glyphicon glyphicon-wrench", @data_toggle = "tooltip", @data_placement = "left", @data_original_title = "Realizar mantencion" }) <text>|</text>
                                @Html.ActionLink(" ", "Edit", new { id = item.ID }, new { @class = "glyphicon glyphicon-edit", @data_toggle = "tooltip", @data_placement = "left", @data_original_title = "Editar" }) <text>|</text>
                                @Html.ActionLink(" ", "Details", new { id = item.ID }, new { @class = "glyphicon glyphicon-info-sign", @data_toggle = "tooltip", @data_placement = "left", @data_original_title = "Detalles" }) 
                                if (item.ESTADO == "De Baja") {
                                    <text>|</text> @Html.ActionLink(" ", "Recover", new { id = item.ID }, new { @class = "glyphicon glyphicon-plus-sign", @data_toggle = "tooltip", @data_placement = "left", @data_original_title = "Recuperar" })
                                } else if (item.DEVU == "Si") {
                                    <text>|</text> @Html.ActionLink(" ", "Delete", new { id = item.ID }, new { @class = "glyphicon glyphicon-minus-sign", @data_toggle = "tooltip", @data_placement = "left", @data_original_title = "Dar de Baja" })                                    
                                }
                            } else {
                                @Html.ActionLink(" ", "Details", new { id = item.ID }, new { @class = "glyphicon glyphicon-info-sign", @data_toggle = "tooltip", @data_placement = "left", @data_original_title = "Detalles" })
                            }
                        }
                    </td>
                </tr>
                            }
        </tbody>
    </table>
    @section scripts{
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/v/dt/jszip-2.5.0/pdfmake-0.1.18/dt-1.10.13/b-1.2.4/b-colvis-1.2.4/b-flash-1.2.4/b-html5-1.2.4/r-2.1.1/sc-1.4.2/se-1.2.0/datatables.min.css" />
<script type="text/javascript" src="https://cdn.datatables.net/v/dt/jszip-2.5.0/pdfmake-0.1.18/dt-1.10.13/b-1.2.4/b-colvis-1.2.4/b-flash-1.2.4/b-html5-1.2.4/r-2.1.1/sc-1.4.2/se-1.2.0/datatables.min.js"></script>


<script type="text/javascript">
    $(function () {
        $('[data-toggle="tooltip"]').tooltip()
    })
</script>

<script>
            $(function () {
                var table = $('#Inventario_PC').DataTable({
                    "language": { "url": "https://cdn.datatables.net/plug-ins/1.10.13/i18n/Spanish.json" },
                    "processing": true,
                    "order": [[10, "desc"]],
                    dom: 'Bfrtlip',
                    buttons: [
                        {
                            extend: 'excelHtml5',
                            exportOptions: {                                
                                orthogonal: 'sort',
                                columns: [':not(:last-child)'],
                                
                            }
                        },
                        {
                            extend: 'pdfHtml5',
                            exportOptions: {
                                orthogonal: 'sort',
                                columns: [0, 1, 2, 3, 4, 9, 10],                                
                            }
                        }],

                    columnDefs: [{
                        targets: [6, 7],
                        render: function (data, type, row, meta) {
                            if (type === 'sort') {
                                var $input = $(data).find('input[type="checkbox"]').addBack();
                                data = ($input.prop('checked')) ? "Cumple" : "No Cumple";
                            }

                            return data;
                        }
                    }]
                });
            });
</script>

    }
}
